-------------------------------------------------------------------------------
-- Remap QWERTY to QGMLWY
-------------------------------------------------------------------------------

-- /ht @aaronjensen
local HS_GENERATED_KEY = 42
local HS_GENERATED_VAL = 55555

-- Listen out for these event types.
local TRIGGERS = {
  hs.eventtap.event.types.keyDown,
  hs.eventtap.event.types.keyUp
}

-- Table mapping QWERTY keys to QGMLWY values.
local KEYMAP = {
  a = "d", b = "j", d = "t", e = "m", f = "n", g = "r", h = "i", i = "u",
  j = "a", k = "e", l = "o", m = "p", n = "k", o = "b", p = "-", r = "l",
  t = "w", u = "f", w = "g", [";"] = "h"
}

-- TODO: Shift-, to en dash, Shift-. to interpunct.

-- Extract a list of keys from a table (order not guaranteed).
local function getKeys(tbl)
  local keys = { }

  for key, _ in pairs(tbl) do
    table.insert(keys, key)
  end

  return keys
end

-- Determine whether an event is 'real', or generated by Hammerspoon.
local function isGenerated(event)
  if event:getProperty(HS_GENERATED_KEY) == HS_GENERATED_VAL then
    return true
  else
    return false
  end
end

-- This callback is called after every qualifying event.
local function callback(event)
  -- Pass-through the event if it's the result of a remap.
  if isGenerated(event) then
    return false
  end

  -- Determine whether the key needs to be remapped...
  local srcKey = hs.keycodes.map[event:getKeyCode()]
  local dstKey = KEYMAP[srcKey]

  -- ...and pass-through accordingly.
  if not dstKey then
    return false
  end

  -- Copy stroke type and modifiers from source event.
  local keyDown = event:getType() == hs.eventtap.event.types.keyDown
  local mods = getKeys(event:getFlags())

  -- Generate a new event with the remapped key.
  local newEvent = hs.eventtap.event.newKeyEvent(mods, dstKey, keyDown)
  newEvent:setProperty(HS_GENERATED_KEY, HS_GENERATED_VAL):post()

  -- Delete the source event.
  return true
end

-- Register the event tap.
qgmlwy = hs.eventtap.new(TRIGGERS, callback):start()
